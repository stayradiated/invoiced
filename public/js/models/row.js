// Generated by CoffeeScript 1.6.3
(function() {
  var Base, Row, Rows,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Base = require('base');

  require('date-utils');

  Row = (function(_super) {
    __extends(Row, _super);

    Row.prototype.defaults = {
      name: '',
      number: 0,
      type: 'number'
    };

    function Row() {
      this["export"] = __bind(this["export"], this);
      Row.__super__.constructor.apply(this, arguments);
    }

    Row.prototype["export"] = function() {
      var obj;
      obj = {
        name: this.name,
        number: this.number,
        type: this.type
      };
      switch (this.type) {
        case 'heading':
          obj.name = this.name.toUpperCase();
          break;
        case 'section':
          obj.name = new Date(obj.name).toFormat('DD/MM/YYYY');
      }
      return obj;
    };

    return Row;

  })(Base.Model);

  Rows = (function(_super) {
    __extends(Rows, _super);

    Rows.prototype.model = Row;

    function Rows() {
      this["export"] = __bind(this["export"], this);
      Rows.__super__.constructor.apply(this, arguments);
    }

    Rows.prototype["export"] = function() {
      var arr;
      arr = [];
      this.forEach(function(record) {
        return arr.push(record["export"]());
      });
      return arr;
    };

    return Rows;

  })(Base.Collection);

  module.exports = Rows;

}).call(this);
