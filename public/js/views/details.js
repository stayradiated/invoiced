// Generated by CoffeeScript 1.6.3
(function() {
  var Base, Details, Invoice,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Base = require('base');

  Invoice = require('../models/invoice');

  Details = (function(_super) {
    __extends(Details, _super);

    Details.prototype.ui = {
      id: '.invoice-id',
      date: '.invoice-date',
      site: '.invoice-site',
      cost: '.invoice-cost',
      email: '.invoice-email',
      labour: '.invoice-labour',
      customer: '.invoice-customer',
      airmover: '.invoice-airmover'
    };

    Details.prototype.events = {
      'change input': 'update'
    };

    function Details() {
      this.render = __bind(this.render, this);
      this.update = __bind(this.update, this);
      var el, name, _ref;
      Details.__super__.constructor.apply(this, arguments);
      this.model = new Invoice();
      this.model.on('refresh', this.render);
      _ref = this.ui;
      for (name in _ref) {
        el = _ref[name];
        el[0].itemName = name;
      }
    }

    Details.prototype.update = function(e) {
      var el, name, value;
      el = e.target;
      name = el.itemName;
      value = el.value;
      if (el.attributes.type.value === 'number') {
        value = parseFloat(value, 10) || 0;
      }
      return this.model[name] = value;
    };

    Details.prototype.render = function() {
      var name;
      for (name in this.ui) {
        this.ui[name].val(this.model[name]);
      }
    };

    return Details;

  })(Base.View);

  module.exports = Details;

}).call(this);
