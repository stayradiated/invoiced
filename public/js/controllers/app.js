// Generated by CoffeeScript 1.6.3
(function() {
  var App, Base, Details, Snippets, Table, docx,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Base = require('../libs/base');

  Table = require('../controllers/table');

  Details = require('../controllers/details');

  Snippets = require('../controllers/snippets');

  docx = require('../libs/docx');

  App = (function(_super) {
    __extends(App, _super);

    App.prototype.elements = {
      '.table': 'table',
      '.snippets': 'snippets',
      '.details': 'details'
    };

    App.prototype.events = {
      'click .generate': 'generate',
      'click .toggle-sidebar': 'toggle'
    };

    function App() {
      this.toggle = __bind(this.toggle, this);
      this.generate = __bind(this.generate, this);
      App.__super__.constructor.apply(this, arguments);
      this.table = new Table({
        el: this.table
      });
      this.details = new Details({
        el: this.details
      });
      this.snippets = new Snippets({
        el: this.snippets
      });
    }

    App.prototype.generate = function() {
      var details, table;
      console.log('Generating word document...');
      details = this.details.model.toJSON();
      table = this.table.rows.toJSON();
      return docx(details, table);
    };

    App.prototype.toggle = function() {
      return this.el.toggleClass('no-snippets');
    };

    return App;

  })(Base.Controller);

  module.exports = App;

}).call(this);
