// Generated by CoffeeScript 1.6.3
(function() {
  var App, Base, Details, Header, Search, Snippets, Storage, Table, docx, fs,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  fs = require('fs');

  Base = require('base');

  Base.View.swig.init({
    root: __dirname + '/../../../source/views'
  });

  Search = require('../controllers/search');

  Table = require('../controllers/table');

  Details = require('../controllers/details');

  Snippets = require('../controllers/snippets');

  Header = require('../controllers/header');

  docx = require('../libs/docx');

  Storage = require('../libs/storage');

  App = (function(_super) {
    __extends(App, _super);

    App.prototype.elements = {
      'header': 'header',
      '.table': 'table',
      '.search': 'search',
      '.details': 'details',
      '.snippets': 'snippets',
      '#save-file': 'file'
    };

    App.prototype.events = {
      'click .toggle-sidebar': 'toggle'
    };

    function App() {
      this.saveInvoice = __bind(this.saveInvoice, this);
      this.openInvoice = __bind(this.openInvoice, this);
      this.toggle = __bind(this.toggle, this);
      this.buildDoc = __bind(this.buildDoc, this);
      this.saveFile = __bind(this.saveFile, this);
      var _this = this;
      App.__super__.constructor.apply(this, arguments);
      this.storage = new Storage();
      this.storage.on('error', function(err, message) {
        console.log('Showing error window');
        return console.log('Error message:', message);
      });
      this.storage.start();
      this.table = new Table({
        el: this.table
      });
      this.details = new Details({
        el: this.details
      });
      this.snippets = new Snippets({
        el: this.snippets
      });
      this.header = new Header({
        el: this.header
      });
      this.header.on('generate', function() {
        return _this.file.click();
      });
      this.header.on('save', this.saveInvoice);
      this.header.on('open', function() {
        return _this.search.show();
      });
      this.search = new Search({
        el: this.search,
        storage: this.storage
      });
      this.search.on('select:invoice', this.openInvoice);
      this.search.search();
      this.file.on('change', this.saveFile);
    }

    App.prototype.saveFile = function(e) {
      var extension, path;
      path = e.target.value;
      extension = '.docx';
      if (path.slice(-5) !== extension) {
        path += extension;
      }
      return this.buildDoc(path);
    };

    App.prototype.buildDoc = function(path) {
      var details, table;
      details = this.details.model["export"]();
      table = this.table.rows["export"]();
      return docx(path, details, table);
    };

    App.prototype.toggle = function() {
      return this.el.toggleClass('no-snippets');
    };

    App.prototype.openInvoice = function(details, table) {
      this.details.model.refresh(details, true);
      return this.table.rows.refresh(table, true);
    };

    App.prototype.saveInvoice = function() {
      return this.storage.saveInvoice({
        details: this.details.model.toJSON(),
        table: this.table.rows.toJSON()
      });
    };

    return App;

  })(Base.Controller);

  module.exports = App;

}).call(this);
