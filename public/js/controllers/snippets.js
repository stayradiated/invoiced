// Generated by CoffeeScript 1.6.3
(function() {
  var Base, Snippet, Snippets,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Base = require('../libs/base');

  Snippet = require('../models/snippet');

  Snippets = (function(_super) {
    __extends(Snippets, _super);

    Snippets.prototype.template = new Base.View;

    Snippets.prototype.elements = {
      '.snippets': 'list'
    };

    Snippets.prototype.events = {
      'click .new-snippet': 'createSnippet'
    };

    function Snippets() {
      this.createSnippet = __bind(this.createSnippet, this);
      this.addSnippet = __bind(this.addSnippet, this);
      Snippets.__super__.constructor.apply(this, arguments);
      this.template.load('snippet');
      this.snippets = new Snippet();
      this.snippets.on('create:model', this.addSnippet);
    }

    Snippets.prototype.addSnippet = function(snippet) {
      return this.list.append(this.template.render(snippet));
    };

    Snippets.prototype.createSnippet = function() {
      console.log('creating a new snippet');
      return this.snippets.create();
    };

    return Snippets;

  })(Base.Controller);

  module.exports = Snippets;

}).call(this);
