// Generated by CoffeeScript 1.6.3
(function() {
  var compile, fs, templates, tmpl, zip, zipConfig;

  fs = require('fs');

  zip = require('./zip');

  tmpl = function(template, namespace) {
    var fn;
    fn = function(existing, fieldName) {
      var content, field, fields, i, last, next, value, _i, _len;
      fields = fieldName.split('.');
      next = namespace;
      last = fields.length - 1;
      for (i = _i = 0, _len = fields.length; _i < _len; i = ++_i) {
        field = fields[i];
        value = next[field];
        if (i === last) {
          content = value;
        } else {
          next = value;
        }
      }
      return content || existing;
    };
    return template.replace(/\{{3}([A-Za-z0-9_|.]*)\}{3}/g, fn);
  };

  templates = {
    doc: __dirname + '/../../../docs/document.xml.tmpl',
    row: __dirname + '/../../../docs/row.xml.tmpl',
    output: __dirname + '/../../../docs/template/word/document.xml'
  };

  zipConfig = {
    folder: __dirname + '/../../../docs/template',
    output: __dirname + '/../../../docs/file.docx'
  };

  compile = function(details, table) {
    var docTmpl, output, row, rowTmpl, _i, _len;
    docTmpl = fs.readFileSync(templates.doc).toString();
    rowTmpl = fs.readFileSync(templates.row).toString();
    details.rows = "";
    for (_i = 0, _len = table.length; _i < _len; _i++) {
      row = table[_i];
      details.rows += tmpl(rowTmpl, row);
    }
    output = tmpl(docTmpl, details);
    fs.writeFile(templates.output, output);
    return zip(zipConfig.folder, zipConfig.output);
  };

  module.exports = compile;

}).call(this);
