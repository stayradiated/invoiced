// Generated by CoffeeScript 1.7.1
(function() {
  var Base, CreateClient,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Base = require('base');

  CreateClient = (function(_super) {
    __extends(CreateClient, _super);

    CreateClient.prototype.ui = {
      name: '.client-name',
      address: '.client-address',
      city: '.client-city',
      postcode: '.client-postcode'
    };

    CreateClient.prototype.events = {
      'submit .create-client-details': 'createClient'
    };

    function CreateClient() {
      this.createClient = __bind(this.createClient, this);
      CreateClient.__super__.constructor.apply(this, arguments);
      this.ui.city.val('Rotorua');
    }

    CreateClient.prototype.clear = function() {
      var el, name, _ref;
      _ref = this.ui;
      for (name in _ref) {
        el = _ref[name];
        if (!'city') {
          el.val('');
        }
      }
      return this.ui.city.val('Rotorua');
    };

    CreateClient.prototype.createClient = function(e) {
      var client, name, selector, valid, _ref;
      e.preventDefault();
      valid = true;
      _ref = this.elements;
      for (selector in _ref) {
        name = _ref[selector];
        if (this[name].val() === '') {
          valid = false;
        }
      }
      if (!valid) {
        return;
      }
      client = {
        name: this.ui.name.val(),
        city: this.ui.city.val(),
        address: this.ui.address.val(),
        postcode: this.ui.postcode.val()
      };
      return storage.saveClient(client).then((function(_this) {
        return function() {
          _this.clear();
          _this.trigger('toggle');
          return _this.trigger('refresh');
        };
      })(this));
    };

    return CreateClient;

  })(Base.View);

  module.exports = CreateClient;

}).call(this);
